steps:
# Step 1 & 2: Build and Push the image (these are correct)
- name: 'gcr.io/cloud-builders/docker'
  args: ['build', '-t', 'us-east1-docker.pkg.dev/extractai-468305/extractai-images/uploader-api:$COMMIT_SHA', '.']
  dir: 'uploader-api'

- name: 'gcr.io/cloud-builders/docker'
  args: ['push', 'us-east1-docker.pkg.dev/extractai-468305/extractai-images/uploader-api:$COMMIT_SHA']

# Step 3: Generate the initial manifest for Cloud Deploy.
# This simplified command creates a minimal service definition that Cloud Deploy can work with.
- name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
  entrypoint: 'sh'
  args:
  - '-c'
  - |
    echo "apiVersion: serving.knative.dev/v1\nkind: Service\nmetadata:\n  name: uploader-api" > cloudrun-service.yaml
    
# Step 4: Hand off to Cloud Deploy to start the canary release.
- name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
  entrypoint: gcloud
  args:
    - 'deploy'
    - 'releases'
    - 'create'
    - 'release-${SHORT_SHA}'
    - '--delivery-pipeline=uploader-api-pipeline'
    - '--region=us-east1'
    - '--skaffold-file=skaffold.yaml'
    # This command uses the manifest generated in the previous step
    - '--source=.'

# List the final image for traceability
images:
- 'us-east1-docker.pkg.dev/extractai-468305/extractai-images/uploader-api:$COMMIT_SHA'
options:
  logging: CLOUD_LOGGING_ONLY